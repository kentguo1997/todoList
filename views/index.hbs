{{!-- index.js是負責view(瀏覽器畫面呈現)的部分。 在controller中使用res.render() 在指揮 view 去工作--}}
{{!-- 拿出叫做 index 的樣板 (這個名字的樣板必須要存在),
把 todos 資料嵌套進去 (這份資料是 model 剛才幫忙做好的) --}}
{{!-- 我們裝的前端引擎是 Handlebars，所以和 view 有關的操作方法都是由 Handlebars 提供的。同理，如果未來改裝成自己喜歡的前端引擎，就要改成另一套操作方法。 --}}

{{!-- Setting crate button --}}
<a href="/todos/new ">Create</a>

{{!-- Get todos(array) from app.js('/')'s routing (Show all todos on index page)--}}
<ul>
  {{#each todos}}
  <li>
    {{this.name}}
    <a href="/todos/{{this._id}}">Detail</a>
    <a href="/todos/{{this._id}}/edit">Edit</a>
  </li>
  {{/each}}
</ul>


{{!-- 重點: --}}
{{!-- 1. {{}} v.s. {{{}}} : 這裡我們用雙花括 {{}} 而不是三花括 {{{}}}。兩者的相別是三花括 {{{}}} 可以解析 HTML 內容，而雙花括 {{}} 會把內容當成單純的字串。 --}}
{{!-- 2. 用 {{ this._id }} 來動態捕捉每筆 todo 資料的編號。也就是說實際輸出的網址可能是： /todos/5e9460ebe0174f4a734ce12a。在 Mongoose 裡使用 _id 來表示每筆資料的唯一識別碼，而識別碼的內容是一筆 16 進位的流水號。這個 _id 屬性不需要在 Schema 裡指定，Mongoose 會自動產生。(可在Robo 3T中看到)--}}